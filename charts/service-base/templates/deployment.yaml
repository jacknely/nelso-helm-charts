apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "base-service.labels" . | nindent 4 }}
  name: {{ include "base-service.name" . }}
spec:
  progressDeadlineSeconds: 300
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "base-service.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        ad.datadoghq.com/main.logs: '[{"service":"{{ include "base-service.datadog-service" . }}","source":"{{ include "base-service.name" . }}"}]'
      labels:
        {{- include "base-service.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: main
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: AWS_DEFAULT_REGION
              value: eu-west-1
            - name: COMMIT_ID
              value: {{ .Values.image.tag }}
            {{- if .Values.ingress.enabled }}
            - name: DOMAIN
              value: {{ .Values.ingress.host }}
            {{- end }}
            - name: APPLICATION_STAGE
              value: {{ .Values.stage }}
            - name: APPLICATION_ENVIRONMENT
              value: {{ .Values.environment }}
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.extraSecrets }}
          envFrom:
            - secretRef:
                name: {{ include "base-service.name" . }}
          {{- end }}
          {{- with .Values.extraEnvFrom }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if .Values.service.enabled }}
          ports:
            - containerPort: {{ .Values.port }}
              protocol: TCP
              name: http
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- tpl . $ | nindent 12 -}}
          {{- end -}}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- tpl . $ | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      {{- with .Values.serviceAccountName }}
      serviceAccountName: {{ . }}
      {{- end }}
      enableServiceLinks: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
        - emptyDir: {}
          name: tmp
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
