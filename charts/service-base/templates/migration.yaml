{{- if .Values.migration.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    {{- include "base-service.labels" . | nindent 4 }}
  name: {{ include "base-service.name" . }}-migration
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
        {{- include "base-service.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: migration
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          {{- with .Values.migration.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: AWS_DEFAULT_REGION
              value: eu-west-1
            {{- if .Values.ingress.enabled }}
            - name: DOMAIN
              value: {{ .Values.ingress.host }}
            {{- end }}
            - name: COMMIT_ID
              value: {{ .Values.image.tag }}
            - name: APPLICATION_STAGE
              value: {{ .Values.stage }}
            - name: APPLICATION_ENVIRONMENT
              value: {{ .Values.environment }}
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_ENVIRONMENT
              value: {{ .Values.stage }}
            {{- end }}
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if or .Values.sentry.enabled .Values.extraSecrets }}
          envFrom:
            - secretRef:
                name: {{ include "base-service.name" . }}
          {{- end }}
          {{- with .Values.extraEnvFrom }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.migration.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      {{- with .Values.serviceAccountName }}
      serviceAccountName: {{ . }}
      {{- end }}
      enableServiceLinks: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
        - emptyDir: {}
          name: tmp
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}